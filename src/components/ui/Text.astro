---
import type { HTMLAttributes, HTMLTag, Polymorphic } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import { twMerge } from "tailwind-merge";

type ComponentProps = {
  id?: string;
  variant?: "normal" | "title";
  class?: string;
  as: "p" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
};

const text = cva("mt-4 text-foreground font-light leading-[1.125] text-white", {
  variants: {
    variant: {
      title: "text-4xl font-medium md:text-6xl text-white text-left",
      big: "text-3xl",
      medium: "text-left text-lg lg:text-xl",
      normal: "mx-auto leading-relaxed text-white/50 md:max-w-2xl lg:mt-8",
    },
  },
});

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & ComponentProps;

const { variant, size, class: className, as: Tag, ...rest } = Astro.props;
---

<Tag class={twMerge(text({ variant }), className)}>
  <slot />
</Tag>
