---
import { getCollection, type CollectionEntry } from "astro:content";

import SectionWrapper from "@/components/ui/SectionWrapper.astro";
import Text from "@/components/ui/Text.astro";
import Technologies from "@/components/ui/Technologies.astro";

import { formatDate } from "@/utils/date";
import { filterByLang } from "@/utils/collections";

import { getLangFromUrl, useTranslations } from "@/i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const experienceCollection = await getCollection("experience", ({ data }) =>
  filterByLang({ data, lang }),
);
const educationCollection = await getCollection("education", ({ data }) =>
  filterByLang({ data, lang }),
);

type ExperienceData = CollectionEntry<"experience">["data"];
type EducationData = CollectionEntry<"education">["data"];

type CollectionData = ExperienceData | EducationData;

const experience = [...experienceCollection, ...educationCollection].sort(
  (a, b) => {
    return a.data.from > b.data.from ? -1 : 1;
  },
);

function isExperienceData(data: CollectionData): data is ExperienceData {
  return "role" in data;
}
---

<SectionWrapper
  class="section-wrapper"
  title={t("experience.title") as string}
  description={t("experience.description") as string}
>
  <div class="flex flex-col">
    {
      experience
        ? experience.map(async ({ data }: { data: CollectionData }, index) => {
            return (
              <>
                <div class="flex w-full gap-6 group pb-6">
                  <div>
                    <div class="w-5 h-5 bg-background rounded-full border border-white/20" />
                    <div class="h-full w-0 border-r border-white/20 mx-auto" />
                  </div>
                  <div class="flex flex-col ">
                    <div class="[&_p]:mt-0 flex flex-col flex-1 gap-2 mb-4">
                      <div class="flex gap-2">
                        <Text as="p" class="text-sm">
                          {formatDate(data.from)}
                        </Text>
                        <Text as="p" class="text-sm">
                          -
                        </Text>
                        <Text as="p" class="text-sm">
                          {data.to ? formatDate(data.to) : "Present"}
                        </Text>
                      </div>
                      <Text as="p" variant="lead" class="text-foreground">
                        {isExperienceData(data) ? data.role : data.degree}
                      </Text>
                      <Text
                        as="h3"
                        variant="lead"
                        class="text-lg md:text-xl text-foreground/80"
                      >
                        {isExperienceData(data) ? data.company : data.institute}
                      </Text>
                    </div>
                    <div class="flex-[1.8]">
                      <Text as="p" class="mt-0">
                        {data.description}
                      </Text>
                      {isExperienceData(data) && (
                        <Technologies data={data.technologies} class="mt-4" />
                      )}
                    </div>
                  </div>
                </div>
              </>
            );
          })
        : null
    }
  </div>
</SectionWrapper>
